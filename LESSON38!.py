# Задача №49. Решение в группах
# Создать телефонный справочник с
# возможностью импорта и экспорта данных в
# формате .txt. Фамилия, имя, отчество, номер
# телефона - данные, которые должны находиться
# в файле.
# 1. Программа должна выводить данные
# 2. Программа должна сохранять данные в
# текстовом файле
# 3. Пользователь может ввести одну из
# характеристик для поиска определенной
# записи(Например имя или фамилию
# человека)
# 4. Использование функций. Ваша программа
# не должна быть линейной

# на Отлично в одного человека надо сделать консольное приложение Телефонный справочник с внешним хранилищем информации,
# и чтоб был реализован основной функционал - просмотр, сохранение, импорт, поиск, удаление.

# Домашнее задание.
# Задача 38: Дополнить телефонный справочник возможностью изменения и удаления данных.
# Пользователь также может ввести имя или фамилию, и Вы должны реализовать функционал
# для изменения и удаления данных.


from random import *
import json


phone_book = {}

def save():
    with open("phone_book.json", "w", encoding="utf-8") as fh:
        fh.write(json.dumps(phone_book, ensure_ascii=False))
        
def load():
    global phone_book
    with open("phone_book.json", "r", encoding="utf-8") as fh:
        phone_book = json.load(fh)


while True:
    command = input("Введите команду: ")
    if command == '/start':
        print('Телефонный справочник начал свою работу')
    elif command == '/stop':
        save()
        print('Телефонный справочник остановил свою работу. Заходите еще - будем рады!')
        break
    elif command == "/add":
        name = input("Введите имя нового контакта: ")
        number0 = input("Введите 1й номер: ")
        number1 = input("Введите 2й номер: ")
        bith_day = input("Введите дату рождения: ")
        mail = input("Введите email: ")
        phone_book[name] = {"phone_numbers": [number0, number1], "birth_day": bith_day, "email": mail}
        print("Контакт добавлен")
    elif command == "/all":
        print("Список всех контактов")
        print(phone_book)
    elif command == "/find":
        name = input("Введите имя для поиска: ")
        if name in phone_book:
            print(name, phone_book[name])
    elif command == '/delete':
        name = input('Введите имя для удаления контакта: ')
        try:
            phone_book.pop(name)
            print('Контакт был успешно удален!')
        except:
            print('Контакта с таким именем нет в телефонном справочнике!')   
    elif command == "/save":
        save()
        print("Контакт сохранен")
    elif command == "/load":
        load()
        print("Загрузка контактов выполнена успешно")
